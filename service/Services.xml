<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <!-- ========================================================= -->
    <!-- netdisk -->
    <!-- ========================================================= -->

    <service verb="create" noun="Bucket" type="entity-auto" authenticate="true">
        <description>Create a new storage bucket with a 5GB quota limit.</description>
        <in-parameters>
            <parameter name="bucketId" type="String" required="true"/>
            <parameter name="userId" type="String" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="bucketId" type="String"/>
            <parameter name="message" type="String"/>
        </out-parameters>
        <actions>
            <set field="minioClient" value="ec.component.getComponent('MinIOClient')"/>
            <script>
                <![CDATA[
                import io.minio.MinioClient;
                import io.minio.errors.MinioException;
                MinioClient client = (MinioClient) minioClient;
                try {
                    if (!client.bucketExists(bucketId)) {
                        client.makeBucket(bucketId);
                        ec.entity.makeValue("moqui.netdisk.Bucket")
                            .set("bucketId", bucketId)
                            .set("userId", userId)
                            .set("quotaLimit", 5368709120L) // 5GB in bytes
                            .set("createdDate", ec.user.nowTimestamp)
                            .create();
                        message = ec.l10n.localize("Bucket") + " " + bucketId + " " + ec.l10n.localize("created successfully");
                    } else {
                        message = ec.l10n.localize("Bucket") + " " + bucketId + " " + ec.l10n.localize("already exists");
                    }
                } catch (MinioException e) {
                    ec.message.addError(ec.l10n.localize("Failed to create bucket") + ": " + e.getMessage());
                }
                ]]>
            </script>
        </actions>
    </service>

    <service verb="list" noun="Bucket" type="entity-auto" authenticate="true">
        <description>List all storage buckets for a user.</description>
        <in-parameters>
            <parameter name="userId" type="String" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="bucketList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.netdisk.Bucket" list="bucketList">
                <econdition field-name="userId" value="${userId}"/>
            </entity-find>
        </actions>
    </service>

    <service verb="delete" noun="Bucket" type="entity-auto" authenticate="true">
        <description>Delete a storage bucket.</description>
        <in-parameters>
            <parameter name="bucketId" type="String" required="true"/>
            <parameter name="userId" type="String" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="message" type="String"/>
        </out-parameters>
        <actions>
            <set field="minioClient" value="ec.component.getComponent('MinIOClient')"/>
            <script>
                <![CDATA[
                import io.minio.MinioClient;
                import io.minio.errors.MinioException;
                MinioClient client = (MinioClient) minioClient;
                try {
                    if (client.bucketExists(bucketId)) {
                        client.removeBucket(bucketId);
                        ec.entity.find("moqui.netdisk.Bucket")
                            .condition("bucketId", bucketId)
                            .condition("userId", userId)
                            .delete();
                        message = ec.l10n.localize("Bucket") + " " + bucketId + " " + ec.l10n.localize("deleted successfully");
                    } else {
                        message = ec.l10n.localize("Bucket") + " " + bucketId + " " + ec.l10n.localize("does not exist");
                    }
                } catch (MinioException e) {
                    ec.message.addError(ec.l10n.localize("Failed to delete bucket") + ": " + e.getMessage());
                }
                ]]>
            </script>
        </actions>
    </service>
</services>